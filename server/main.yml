name: Sync Fork

on:
  schedule:
    #    - cron:  '0,10,20,30,40,50 * * * *'
    - cron:  '0 * * * *'
    # 분, 시간, 날짜(월), 월, 요일
  workflow_dispatch:

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          ref:  be-feat/member
          persist-credentials: true

      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          target_sync_branch: be-feat/member
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_sync_branch: be-feat/member
          upstream_sync_repo: codestates-seb/seb45_main_009
          upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}
          test_mode: false


      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true'
        run: echo "New commits were found to sync."

      - name: No new commits
        if: steps.sync.outputs.has_new_commits == 'false'
        run: echo "There were no new commits."

      - name: Show value of 'has_new_commits'
        run: echo ${{ steps.sync.outputs.has_new_commits }}

      - name: Set new_commits flag
        id: set_new_commits
        run: echo "::set-output name=has_new_commits::${{ steps.sync.outputs.has_new_commits }}"

  back:
    needs: sync_latest_from_upstream
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x /home/runner/work/seb45_main_009/seb45_main_009/server/gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
          build-root-directory: ./server

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t fitfolio ./server/ 
          docker tag fitfolio seungbeomson/fitfolio:${GITHUB_SHA::7}
          docker push seungbeomson/fitfolio:${GITHUB_SHA::7}

      - name: SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2 }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          script_stop: true
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(sudo docker ps -aq) || true
            sudo docker rmi $(sudo docker images -aq) || true
            sudo docker pull seungbeomson/fitfolio:${GITHUB_SHA::7}
            sudo docker tag seungbeomson/fitfolio:${GITHUB_SHA::7} fitfolio
            sudo docker rmi seungbeomson/fitfolio:${GITHUB_SHA::7}
            sudo docker run -d -p 8080:8080 --name fitfolio \
              -e "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" \
              -e "LOCAL_DB_USERNAME=${{ secrets.LOCAL_DB_USERNAME }}" \
              -e "LOCAL_DB_PASSWORD=${{ secrets.LOCAL_DB_PASSWORD }}" \
              -e "K_CLIENT_ID=${{ secrets.K_CLIENT_ID }}" \
              -e "K_CLIENT_SECRET=${{ secrets.K_CLIENT_SECRET }}" \
              -e "LOCAL_DB_URL=${{ secrets.LOCAL_DB_URL }}" \
              -e "AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}" \
              -e "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" \
              -e "AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }}" \
              fitfolio

  # front:
